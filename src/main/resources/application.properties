spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/appteste}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.jpa.show-sql=true

# se precisar recriar a base
#CREATE DATABASE appteste
#CREATE TABLE usuarios (id VARCHAR(50) PRIMARY KEY, nome_usuario VARCHAR(100) NOT NULL, senha VARCHAR(20) NOT NULL);
#CREATE TABLE pessoas(id BIGINT NOT NULL,nome VARCHAR(255), cpf BIGINT, rg VARCHAR(255), sobrenome VARCHAR(255), nascimento date, sexo SMALLINT, enum_sexo VARCHAR(255) NOT NULL, CONSTRAINT pk_pessoas PRIMARY KEY (id) );

#INSERT INTO public.pessoas (
#id, nome, cpf, rg, sobrenome, nascimento, sexo, enum_sexo) VALUES (
#'1'::bigint, 'Fabrício'::character varying, '06543404043'::bigint, '987654-3'::character varying, 'da Silva'::character varying, '1958-08-08'::date, '1'::smallint, 'MASCULINO'::character varying)
#returning id;

#INSERT INTO public.pessoas (
#id, nome, cpf, rg, sobrenome, nascimento, sexo, enum_sexo) VALUES (
#'2'::bigint, 'Mariana'::character varying, '06543404043'::bigint, '987654-3'::character varying, 'de Lima'::character varying, '1980-03-03'::date, '1'::smallint, 'FEMININO'::character varying)
#returning id;

